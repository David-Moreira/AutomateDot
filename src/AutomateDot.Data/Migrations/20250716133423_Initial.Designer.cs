// <auto-generated />
using System;
using AutomateDot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomateDot.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250716133423_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("AutomateDot.Data.Entities.AutomationExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AutomationRecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AutomationRecipeId");

                    b.ToTable("AutomationExecutions");
                });

            modelBuilder.Entity("AutomateDot.Data.Entities.AutomationExecutionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutomationExecutionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AutomationExecutionId");

                    b.ToTable("AutomationExecutionEntries");
                });

            modelBuilder.Entity("AutomateDot.Data.Entities.AutomationRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionConfiguration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TriggerConfiguration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AutomationRecipes");
                });

            modelBuilder.Entity("AutomateDot.Data.Entities.AutomationExecution", b =>
                {
                    b.HasOne("AutomateDot.Data.Entities.AutomationRecipe", "AutomationRecipe")
                        .WithMany()
                        .HasForeignKey("AutomationRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AutomationRecipe");
                });

            modelBuilder.Entity("AutomateDot.Data.Entities.AutomationExecutionEntry", b =>
                {
                    b.HasOne("AutomateDot.Data.Entities.AutomationExecution", null)
                        .WithMany("AutomationExecutionEntries")
                        .HasForeignKey("AutomationExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutomateDot.Data.Entities.AutomationExecution", b =>
                {
                    b.Navigation("AutomationExecutionEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
