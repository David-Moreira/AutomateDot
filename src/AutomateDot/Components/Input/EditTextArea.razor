@using System.Linq.Expressions
<fieldset class="fieldset" >
    @if (!string.IsNullOrEmpty(Caption))
    {
        <legend class="fieldset-legend">@Caption</legend>
    }
    <InputTextArea Value="@Value" ValueChanged="@ValueChanged" ValueExpression="@ValueExpression" class="textarea w-full" rows="@Rows"
                   @attributes="@AdditionalAttributes" />
    <ValidationMessage For="@ValueExpression" />
</fieldset>


@code {
    [Parameter] public string Caption { get; set; } = string.Empty;
    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public Expression<Func<string>>? ValueExpression { get; set; }
    [Parameter] public int Rows { get; set; } = 3;

    [Parameter( CaptureUnmatchedValues = true )] public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    protected override void OnInitialized()
    {
        if ( ValueExpression is null )
        {
            ValueExpression = () => Value;
        }
        base.OnInitialized();
    }
}
