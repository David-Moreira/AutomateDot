@using System.Linq.Expressions

<fieldset class="fieldset" >
    @if (!string.IsNullOrEmpty(Caption))
    {
        <legend class="fieldset-legend">@Caption</legend>
    }
    <InputText Value="@Value" ValueChanged="@ValueChanged" ValueExpression="@ValueExpression" class="input w-full" @attributes="@AdditionalAttributes" />
    @if ( ValueExpression is not null )
    {
        <ValidationMessage For="@ValueExpression" />
    }
</fieldset>

@code {
    [Parameter] public string Caption { get; set; } = string.Empty;
    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public Expression<Func<string>>? ValueExpression { get; set; }

    [Parameter( CaptureUnmatchedValues = true )] public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    protected override void OnInitialized()
    {
        if ( ValueExpression  is null )
        {
            ValueExpression = () => Value;
        }
        base.OnInitialized();
    }
}
