@using AutomateDot.Data
@using Microsoft.EntityFrameworkCore

@if (ActionInput is not null)
{
    <EditSelect @bind-Value="ActionInput.ActionType" Caption="Action">
        @foreach (var item in Enum.GetValues<ActionType>())
        {
            <option value="@item">@item.ToFriendlyString()</option>
        }
    </EditSelect>

    @if (ActionInput.ActionType == ActionType.SendWebhook)
    {
        <EditText @bind-Value="ActionInput.SendWebhookConfiguration!.Url" Caption="Url" />
        <EditText @bind-Value="ActionInput.SendWebhookConfiguration!.Message" Caption="Message" />
    }
    else if (ActionInput.ActionType == ActionType.Gotify)
    {
        <EditText @bind-Value="ActionInput.GotifyConfiguration!.Url" Caption="Url" />
        <EditText @bind-Value="ActionInput.GotifyConfiguration!.Title" Caption="Title" />
        <EditText @bind-Value="ActionInput.GotifyConfiguration!.Message" Caption="Message" />
        <EditNumber @bind-Value="ActionInput.GotifyConfiguration!.Priority" Caption="Priority" />
    }
    else if (ActionInput.ActionType == ActionType.Script)
    {
        <EditText @bind-Value="ActionInput.ScriptConfiguration!.File" Caption="File" />
        <EditText @bind-Value="ActionInput.ScriptConfiguration!.Arguments" Caption="Arguments" />
    }
}
@code {
    [Parameter] public AutomationRecipeActionDto? ActionInput { get; set; }
}