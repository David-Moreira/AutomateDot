@using AutomateDot.Extensions
@if (Data.IsNullOrEmpty())
{
    <div>You have no records yet.</div>
}
else
{
    @if (CascadingMobileDetector.IsMobile)
    {
        <div>
            <table class="table w-full">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Trigger</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Data ?? Enumerable.Empty<AutomationRecipeDto>())
                    {
                        <tr class="hover:bg-base-300" @onclick="() => GoToDetail(item)">
                            <td>
                                <div class="text-sm font-bold">@item.Name</div>
                            </td>
                            <td>
                                <div class="text-sm">@item.TriggerName</div>
                            </td>
                            <td>
                                <div class="text-sm">@item.ActionName</div>
                            </td>
                            @if (item.Trigger == Triggers.MANUAL)
                            {
                                <td @onclick:preventDefault @onclick:stopPropagation>
                                    <button @onclick="@(async () => await ManualTrigger(item))" class="float-right btn btn-primary">
                                        Trigger
                                    </button>
                                </td>
                            }else if (_hasManualTrigger)
                            {
                                <td></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="overflow-x-auto">
            <table class="table w-full">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Trigger</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Data ?? Enumerable.Empty<AutomationRecipeDto>())
                    {
                        <tr class="hover:bg-base-300" @onclick="() => GoToDetail(item)">
                            <td>
                                <div class="font-bold">@item.Name</div>
                            </td>
                            <td>@item.TriggerName</td>
                            <td>
                                @item.ActionName
                            </td>
                            @if (item.Trigger == Triggers.MANUAL)
                            {
                                <td @onclick:preventDefault @onclick:stopPropagation>
                                    <button @onclick="@(async () => await ManualTrigger(item))" class="float-right btn btn-primary">
                                        Trigger
                                    </button>
                                </td>
                            }
                            else if (_hasManualTrigger)
                            {
                                <td></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}
@code {
    [CascadingParameter] public CascadingMobileDetector CascadingMobileDetector { get; set; } = default!;
    [EditorRequired][Parameter] public List<AutomationRecipeDto>? Data { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; } = default!;
    [Inject] public AutomationService AutomationService { get; set; } = default!;

    private bool _hasManualTrigger;

    protected override void OnParametersSet()
    {
        _hasManualTrigger = HasManualTrigger();
    }

    public bool HasManualTrigger()
    {
        return (Data ?? Enumerable.Empty<AutomationRecipeDto>()).Any(x => x.Trigger == Triggers.MANUAL);
    }

    public void GoToDetail(AutomationRecipeDto item)
    {
        NavigationManager.NavigateTo($"/automates/{item.Id}");
    }

    public async Task ManualTrigger(AutomationRecipeDto item)
    {
        await AutomationService.ExecuteAction(item.Id);
    }
}